name: Build Android APK

on:
  workflow_dispatch:  # Manual trigger only

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      run: |
        # Download and setup Android SDK
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip -q commandlinetools-linux-9477386_latest.zip
        mkdir -p $HOME/android-sdk/cmdline-tools
        mv cmdline-tools $HOME/android-sdk/cmdline-tools/latest
        
        # Set environment variables
        echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
        echo "$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH
        echo "$HOME/android-sdk/build-tools/34.0.0" >> $GITHUB_PATH
        
        # Accept licenses and install required components
        yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses || true
        $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-30" "platforms;android-34" "build-tools;34.0.0"
      
    - name: Setup Gradle (Direct Installation)
      run: |
        # Download and install Gradle directly
        wget -q https://services.gradle.org/distributions/gradle-8.4-bin.zip
        unzip -q gradle-8.4-bin.zip
        export GRADLE_HOME=$PWD/gradle-8.4
        export PATH=$GRADLE_HOME/bin:$PATH
        echo "$PWD/gradle-8.4/bin" >> $GITHUB_PATH
        
        # Verify Gradle installation
        gradle --version
        
    - name: Create keystore
      run: |
        mkdir -p keystore
        keytool -genkey -v -keystore keystore/release.keystore \
          -alias expense_tracker_key -keyalg RSA -keysize 2048 -validity 10000 \
          -dname "CN=ExpenseTracker, OU=Development, O=ExpenseTracker, L=City, S=State, C=US" \
          -storepass github_build -keypass github_build
          
    - name: Create gradle.properties
      run: |
        echo "RELEASE_STORE_FILE=keystore/release.keystore" >> gradle.properties
        echo "RELEASE_STORE_PASSWORD=github_build" >> gradle.properties
        echo "RELEASE_KEY_ALIAS=expense_tracker_key" >> gradle.properties
        echo "RELEASE_KEY_PASSWORD=github_build" >> gradle.properties
        
    - name: Build Release APK (Direct Gradle)
      run: |
        # Use gradle directly, not gradlew
        gradle assembleRelease --stacktrace --info
        
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: expense-tracker-apk
        path: app/build/outputs/apk/release/app-release.apk
        
    - name: APK Info
      run: |
        echo "APK built successfully!"
        ls -la app/build/outputs/apk/release/ || echo "APK directory not found"
        if [ -f "app/build/outputs/apk/release/app-release.apk" ]; then
          echo "APK size: $(du -h app/build/outputs/apk/release/app-release.apk | cut -f1)"
        else
          echo "APK file not found, checking all build outputs:"
          find . -name "*.apk" -type f 2>/dev/null || echo "No APK files found"
        fi