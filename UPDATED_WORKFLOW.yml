name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual trigger

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Create keystore
      run: |
        mkdir -p keystore
        keytool -genkey -v -keystore keystore/release.keystore \
          -alias expense_tracker_key -keyalg RSA -keysize 2048 -validity 10000 \
          -dname "CN=ExpenseTracker, OU=Development, O=ExpenseTracker, L=City, S=State, C=US" \
          -storepass github_build -keypass github_build
          
    - name: Create gradle.properties
      run: |
        echo "RELEASE_STORE_FILE=keystore/release.keystore" >> gradle.properties
        echo "RELEASE_STORE_PASSWORD=github_build" >> gradle.properties
        echo "RELEASE_KEY_ALIAS=expense_tracker_key" >> gradle.properties
        echo "RELEASE_KEY_PASSWORD=github_build" >> gradle.properties
        
    - name: Build Release APK
      run: ./gradlew assembleRelease
      
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: expense-tracker-apk
        path: app/build/outputs/apk/release/app-release.apk
        
    - name: Upload AAB
      uses: actions/upload-artifact@v4
      with:
        name: expense-tracker-aab
        path: app/build/outputs/bundle/release/app-release.aab
      if: success()
      
    - name: APK Info
      run: |
        echo "APK built successfully!"
        ls -la app/build/outputs/apk/release/
        if [ -f "app/build/outputs/apk/release/app-release.apk" ]; then
          echo "APK size: $(du -h app/build/outputs/apk/release/app-release.apk | cut -f1)"
        fi